% Generated by r6-generator-maven-plugin: do not edit by hand

\name{HtmlConverter}

\alias{HtmlConverter}

\title{HtmlConverter}

\arguments{
	\if{html}{\out{<div class="arguments">}}
	\item{fontfiles}{fontfiles - (java expects a RCharacterVector)}
	\if{html}{\out{</div>}}
}


\description{
missing description

Version: 0.01

Generated: 2022-02-16T15:07:21.867
}

\details{
	no details
}

\examples{\dontrun{
J = html2pdfr::JavaApi$get();
instance = J$HtmlConverter$new(fontfiles)

## -----------------------------------
## Method `HtmlConverter$urlToPdf`
## -----------------------------------

## -----------------------------------
## Method `HtmlConverter$fileToPdf`
## -----------------------------------

## -----------------------------------
## Method `HtmlConverter$stringToPdf`
## -----------------------------------

## -----------------------------------
## Method `HtmlConverter$fitIntoPage`
## -----------------------------------

## -----------------------------------
## Method `HtmlConverter$fitIntoA4`
## -----------------------------------

}}

\keyword{java api}

\section{Methods}{
	\subsection{Constructors}{
		\itemize{
			\item \href{#method-new}{\code{J$HtmlConverter$new(fontfiles)}}
		}
	}
	\subsection{Static methods}{
		\itemize{
			\item{none}
		}
	}
	\subsection{Instance methods}{
		\itemize{
			\item \href{#method-urlToPdf}{\code{instance$urlToPdf(htmlUrl, outFile)}}
			\item \href{#method-fileToPdf}{\code{instance$fileToPdf(inFile, outFile)}}
			\item \href{#method-stringToPdf}{\code{instance$stringToPdf(html, outFile, baseUri)}}
			\item \href{#method-fitIntoPage}{\code{instance$fitIntoPage(htmlFragment, outFile, maxWidthInches, maxHeightInches, formats, pngDpi)}}
			\item \href{#method-fitIntoA4}{\code{instance$fitIntoA4(htmlFragment, outFile, xMarginInInches, yMarginInInches)}}
			\item \code{instance$clone()}
			\item \code{instance$print()}
		}
	}

	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-new"></a>}}
	
	\subsection{Method \code{new()}}{
		the default no-args constructor
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
J$HtmlConverter$new(fontfiles)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{fontfiles}{ - (java expects a RCharacterVector)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			R6 HtmlConverter object: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-urlToPdf"></a>}}
	
	\subsection{Method \code{urlToPdf()}}{
		no description
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
instance = J$HtmlConverter$new(...);
instance$urlToPdf(htmlUrl, outFile)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{htmlUrl}{ - (java expects a String)}
				\item{outFile}{ - (java expects a String)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			RCharacter: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-fileToPdf"></a>}}
	
	\subsection{Method \code{fileToPdf()}}{
		no description
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
instance = J$HtmlConverter$new(...);
instance$fileToPdf(inFile, outFile)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{inFile}{ - (java expects a String)}
				\item{outFile}{ - (java expects a String)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			RCharacter: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-stringToPdf"></a>}}
	
	\subsection{Method \code{stringToPdf()}}{
		no description
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
instance = J$HtmlConverter$new(...);
instance$stringToPdf(html, outFile, baseUri)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{html}{ - (java expects a String)}
				\item{outFile}{ - (java expects a String)}
				\item{baseUri}{ - (java expects a RCharacter)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			RCharacter: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-fitIntoPage"></a>}}
	
	\subsection{Method \code{fitIntoPage()}}{
		no description
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
instance = J$HtmlConverter$new(...);
instance$fitIntoPage(htmlFragment, outFile, maxWidthInches, maxHeightInches, formats, pngDpi)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{htmlFragment}{ - (java expects a String)}
				\item{outFile}{ - (java expects a String)}
				\item{maxWidthInches}{ - (java expects a double)}
				\item{maxHeightInches}{ - (java expects a double)}
				\item{formats}{ - (java expects a String)}
				\item{pngDpi}{ - (java expects a double)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			RCharacterVector: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-fitIntoA4"></a>}}
	
	\subsection{Method \code{fitIntoA4()}}{
		no description
	

		\subsection{Usage}{
			\if{html}{\out{<div class="r">}}
			\preformatted{
J = html2pdfr::JavaApi$get()
instance = J$HtmlConverter$new(...);
instance$fitIntoA4(htmlFragment, outFile, xMarginInInches, yMarginInInches)
  			}
			\if{html}{\out{</div>}}
		}
	
		\subsection{Arguments}{
			\if{html}{\out{<div class="arguments">}}
			\itemize{
				\item{htmlFragment}{ - (java expects a String)}
				\item{outFile}{ - (java expects a String)}
				\item{xMarginInInches}{ - (java expects a double)}
				\item{yMarginInInches}{ - (java expects a double)}
			}
			\if{html}{\out{</div>}}
		}

		\subsection{Returns}{
			RCharacterVector: 
		}

		\subsection{Examples}{
			\if{html}{\out{<div class="r example copy">}}
			\preformatted{
not available
			}
			\if{html}{\out{</div>}}
		}
	}
}